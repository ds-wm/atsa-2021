mean()
rowMeans
mean
# arithmetic mean
arithmetic_mean <- function(vector){
cumulative_sum = 0
length = 0
for (val in vector){
cumulative_sum = cumulative_sum + val
length = length + 1
}
return(cumulative_sum / length)
}
# geometric mean
# harmonic mean
test_vector = c(1, 2.5, 4, 5.5, 7, 8.5, 10, 11.5, 13, 14.5)
arithmetic_mean(test_vector)
mean(test_vector)
# arithmetic mean
arithmeticMean <- function(vector){
cumulative.sum = 0
length = 0
for (val in vector){
cumulative.sum = cumulative.sum + val
length = length + 1
}
return(cumulative.sum / length)
}
# geometric mean
geometricMean <- function(vector){
cumulative.product = 0
length = 0
for (val in vector){
cumulative.product = cumulative.product * val
length = length + 1
}
return(cumulative.product ^ (1 / length))
}
# harmonic mean
harmonicMean <- function(vector){
denominator = 0
length = 0
for (val in vector){
denominator = denominator + (1 / val)
length = length + 1
}
return(length / denominator)
}
# variance
variance <- function(vector, k){
length <- length(vector)
squared.deviation <- sum((vector - mean(vector)) ^ 2)
return(squared.deviation / (length - k))
}
test_vector = c(1, 2.5, 4, 5.5, 7, 8.5, 10, 11.5, 13, 14.5)
arithmetic_mean(test_vector)
mean(test_vector)
variance(test_vector, 1)
var(test_vector)
# arithmetic mean
arithmeticMean <- function(vector){
cumulative.sum = 0
length = 0
for (val in vector){
cumulative.sum = cumulative.sum + val
length = length + 1
}
return(cumulative.sum / length)
}
# geometric mean
geometricMean <- function(vector){
cumulative.product = 0
length = 0
for (val in vector){
cumulative.product = cumulative.product * val
length = length + 1
}
return(cumulative.product ^ (1 / length))
}
# harmonic mean
harmonicMean <- function(vector){
denominator = 0
length = 0
for (val in vector){
denominator = denominator + (1 / val)
length = length + 1
}
return(length / denominator)
}
# variance
variance <- function(vector, k){
length <- length(vector)
squared.deviation <- sum((vector - mean(vector)) ^ 2)
return(squared.deviation / (length - k))
}
# standard deviation
standardDeviation <- function(vector, k){
var.num <- variance(vector, k)
return(sqrt(var.num))
}
# standard error
standardError <- function(vector, k, n){
standard.deviation <- standardDeviation(vector, k)
return(standard.deviation / n)
}
test_vector = c(1, 2.5, 4, 5.5, 7, 8.5, 10, 11.5, 13, 14.5)
arithmetic_mean(test_vector)
mean(test_vector)
variance(test_vector, 1)
var(test_vector)
standardDeviation(test_vector, 1)
sd(test_vector)
source('~/.active-rstudio-document')
conca
concat
concat('My Arithmetic Mean')
paste('My Arithmetic Mean: ', arithmeticMean(test_vector), '\n')
paste('My Arithmetic Mean: ', arithmeticMean(test_vector), '/n')
paste('My Arithmetic Mean: ', arithmeticMean(test_vector), '\n')
paste('R Arithmetic Mean: ', arithmeticMean(test_vector))
cat('My Arithmetic Mean: ', arithmeticMean(test_vector), '\n')
cat('R Arithmetic Mean: ', arithmeticMean(test_vector))
# arithmetic mean
arithmeticMean <- function(vector){
cumulative.sum = 0
length = 0
for (val in vector){
cumulative.sum = cumulative.sum + val
length = length + 1
}
return(cumulative.sum / length)
}
# geometric mean
geometricMean <- function(vector){
cumulative.product = 0
length = 0
for (val in vector){
cumulative.product = cumulative.product * val
length = length + 1
}
return(cumulative.product ^ (1 / length))
}
# harmonic mean
harmonicMean <- function(vector){
denominator = 0
length = 0
for (val in vector){
denominator = denominator + (1 / val)
length = length + 1
}
return(length / denominator)
}
# variance
variance <- function(vector, k){
length <- length(vector)
squared.deviation <- sum((vector - mean(vector)) ^ 2)
return(squared.deviation / (length - k))
}
# standard deviation
standardDeviation <- function(vector, k){
var.num <- variance(vector, k)
return(sqrt(var.num))
}
# standard error
standardError <- function(vector, k){
standard.deviation <- standardDeviation(vector, k)
return(standard.deviation / length(vector))
}
#################################################################
install.packages("psych")
library("psych")
test_vector = c(1, 2.5, 4, 5.5, 7, 8.5, 10, 11.5, 13, 14.5)
cat('arithmeticMean: ', arithmeticMean(test_vector), '\n')
cat('mean: ', mean(test_vector), '\n\n')
cat('geometricMean: ', geometricMean(test_vector), '\n')
cat('geometric.mean: ', geometric.mean(test_vector, '\n\n'))
geometricMean <- function(vector){
cumulative.product = 1
length = 0
for (val in vector){
cumulative.product = cumulative.product * val
length = length + 1
}
return(cumulative.product ^ (1 / length))
}
cat('geometricMean: ', geometricMean(test_vector), '\n')
cat('geometric.mean: ', geometric.mean(test_vector, '\n\n'))
# arithmetic mean
arithmeticMean <- function(vector){
cumulative.sum = 0
length = 0
for (val in vector){
cumulative.sum = cumulative.sum + val
length = length + 1
}
return(cumulative.sum / length)
}
# geometric mean
geometricMean <- function(vector){
cumulative.product = 1
length = 0
for (val in vector){
cumulative.product = cumulative.product * val
length = length + 1
}
return(cumulative.product ^ (1 / length))
}
# harmonic mean
harmonicMean <- function(vector){
denominator = 0
length = 0
for (val in vector){
denominator = denominator + (1 / val)
length = length + 1
}
return(length / denominator)
}
# variance
variance <- function(vector, k){
length <- length(vector)
squared.deviation <- sum((vector - mean(vector)) ^ 2)
return(squared.deviation / (length - k))
}
# standard deviation
standardDeviation <- function(vector, k){
var.num <- variance(vector, k)
return(sqrt(var.num))
}
# standard error
standardError <- function(vector, k){
standard.deviation <- standardDeviation(vector, k)
return(standard.deviation / length(vector))
}
#################################################################
test_vector = c(1, 2.5, 4, 5.5, 7, 8.5, 10, 11.5, 13, 14.5)
cat('my arithmetic mean: ', arithmeticMean(test_vector))
cat('built in arithmetic mean: ', mean(test_vector))
# no built in function for geometric mean
# no built in function for harmonic mean
cat('my variance: ', variance(test_vector))
cat('built in variance: ', var(test_vector))
cat('my standard deviation: ', standardDeviation(test_vector))
cat('built in standard deviation: ', sd(test_vector))
# no built in function for standard error
source('C:/Users/cpsug/OneDrive/Spring2021/DATA330/d.R')
source('C:/Users/cpsug/OneDrive/Spring2021/DATA330/d.R')
source('C:/Users/cpsug/OneDrive/Spring2021/DATA330/d.R')
Rhistory
.Rhistory
load("~/.RData")
test_vector
cat('built in standard deviation: ', sd(test_vector), '\n\n')
source('C:/Users/cpsug/OneDrive/Spring2021/DATA330/excersise0.1.R')
# no built in function for standard error
wd
savehistory(file = 'cpsughrue_b1.Rhistory')
