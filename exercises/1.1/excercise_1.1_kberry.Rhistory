sd(inputs)/sqrt(length(inputs))
}
s_d_mean(inputs)
inputs <- y
arith(inputs)
geo(inputs)
harmo(inputs)
variance(inputs)
s_d(inputs)
s_d_mean(inputs)
harmo <- function(inputs) {
my_sum <- 0
for (input in inputs) {
my_sum <- my_sum + (1/input)
}
return(length(inputs)/my_sum)
}
harmo(inputs)
getwd()
savehistory(file = "Excercise_0.1_kberry.Rhistory")
hist(airquality$Temp)
plot(airquality$Ozone ~ airquality$Temp)
t <- c(0, pi/4, pi/3, .75pi, pi)
Yt1 <- sin(t)
Yt2 <- sin(t + pi/2)
For Ut:
EYt <- 0.5*Yt1 + .05*Yt2
cat(“Y(t1): “, Yt1, “\n”)
cat(“Y(t2): “, Yt2, “\n”)
cat(“E{Y(t)}:”, EYt)
t <- c(0, pi/4, pi/3, .75*pi, pi)
Yt1 <- sin(t)
Yt2 <- sin(t + pi/2)
#For Ut:
EYt <- 0.5*Yt1 + .05*Yt2
cat(“Y(t1): “, Yt1, “\n”)
cat("Y(t1):", Yt1, "\n")
cat("Y(t2):", Yt2, "\n")
cat("E{Y(t)}:", EYt)
EY1 <-mean(Yt1)
EY2 <- mean(Yt2)
cat("Mean Y1(t): ", EY1, "\n")
cat("Mean Y2(t): ", EY2, "\n\n")
plot(
t, #x vale
Yt1, #y values
ylim = c(-1.1, 1.25), #limit to plot in  y-axis
type = "l",
col = "red",
lwd = 1,
lty = 1,
xlab = "Time",
ylab = NA
)
legend(
"top",
inset=0.01,
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
#excercise 1.1
t <- c(0, pi/4, pi/3, .75*pi, pi)
t <- c(0:100)
t <- t * 25/100
# Define the time series
Yt1 <- sin(t)
Yt <- sin(t) + pi/2
# Plot 2 our time series
plot(
t, #x vale
Yt1, #y values
ylim = c(-1.1, 1.25), #limit to plot in  y-axis
type = "l", #type line "l", "p", "o"
col = "red", #color code
lwd = 1,
lty = 1,
xlab = "Time",
ylab = NA
)
legend(
"top",
inset=0.01,
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
lines(
t,
Yt2,
col = "blue",
lty = 2,
lwd = 1
)
# Create a sequence to 100 and scale values to (0, 25)
t <- c(0:100)
t <- t * 25/100
# Define the time series
Yt1 <- sin(t)
Yt <- sin(t) + pi/2
# Plot 2 our time series
plot(
t,                         #x vale
Yt1,#y values
main = " Example Time Series", #title
ylim = c(-1.1, 1.25),         #limit to plot in  y-axis
type ="l",                 #type line "l", "p", "o"
col = "red",              #color code
lwd = 1,                 #line width
lty = 1,                #line types
xlab = "Time",          #x-axis label
ylab = NA               #y-axis label
)
lines(
t,
Yt2,
col = "blue",
lty = 2,
lwd = 1
)
legend(
"top", #location
inset=0.01, #buffer around legend
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
t <- c(0:100)
t <- t * 25/100
# Define the time series
Yt1 <- sin(t)
Yt2 <- sin(t) + pi/2
# Plot 2 our time series
plot(
t,                         #x vale
Yt1,#y values
main = " Example Time Series", #title
ylim = c(-1.1, 1.25),         #limit to plot in  y-axis
type ="l",                 #type line "l", "p", "o"
col = "red",              #color code
lwd = 1,                 #line width
lty = 1,                #line types
xlab = "Time",          #x-axis label
ylab = NA               #y-axis label
)
lines(
t,
Yt2,
col = "blue",
lty = 2,
lwd = 1
)
legend(
"top", #location
inset=0.01, #buffer around legend
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
Yt2 <- sin(t + pi/2)
lines(
t,
Yt2,
col = "blue",
lty = 2,
lwd = 1
)
t <- c(0:100)
t <- t * 25/100
# Define the time series
Yt1 <- sin(t)
Yt2 <- sin(t + pi/2)
# Plot 2 our time series
plot(
t,                         #x vale
Yt1,#y values
main = " Example Time Series", #title
ylim = c(-1.1, 1.25),         #limit to plot in  y-axis
type ="l",                 #type line "l", "p", "o"
col = "red",              #color code
lwd = 1,                 #line width
lty = 1,                #line types
xlab = "Time",          #x-axis label
ylab = NA               #y-axis label
)
lines(
t,
Yt2,
col = "blue",
lty = 2,
lwd = 1
)
legend(
"top", #location
inset=0.01, #buffer around legend
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
#For Ut:
EYt <- 0.5*Yt1 + .05*Yt2
# Create a sequence to 100 and scale values to (0, 25)
t <- c(0:100)
t <- t * 25/100
# Define the time series
Yt1 <- sin(t)
Yt2 <- sin(t + pi/2)
# Plot 2 our time series
plot(
t,                         #x vale
Yt1,#y values
main = " Example Time Series", #title
ylim = c(-1.1, 1.25),         #limit to plot in  y-axis
type ="l",                 #type line "l", "p", "o"
col = "red",              #color code
lwd = 1,                 #line width
lty = 1,                #line types
xlab = "Time",          #x-axis label
ylab = NA               #y-axis label
)
lines(
t,
Yt2,
col = "blue",
lty = 2,
lwd = 1
)
lines(
t,
EYt,
lty = 3,
lwd = 1
)
legend(
"top", #location
inset=0.01, #buffer around legend
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
#For t1 = 0
Xt1 <- sin(0)
ut1 <- .5
Xt2 <- sin(0)
ut2 <- .5
gt1t2 <-.5*(Xt1 - ut1) + .5*(Xt2 -ut2)
gt1t2
library(readxl)
Chapter3 <- read_excel("Desktop/BusStat/Chapter3.xlsx",
sheet = "Growth_Value")
View(Chapter3)
Growth_value <- read_excel("Desktop/BusStat/Chapter3.xlsx",
sheet = "Growth_Value")
mean(Growth_value$Growth)
median(Growth_value$Growth)
sort(Growth_value$Growth)
wt <- c(.4, .1,.3,.2)
yourGrades <- c(80,100,90,90)
weighted.mean(yourGrades, wt)
x<-c(-38.32, 1.71, 3.17, 5.99, 12.56, 13.47, 16.89, 16.96, 32.16, 36.29)
median(x)
16.96 + .25 * (32.16 - 16.96 ) #Q3
1.71+.75*(3.17-1.71)  #Q1
min(x)
max(x)
summary(x)
#Outliers
Q3<-16.96 + .25 * (32.16 - 16.96)
Q1<-1.71+.75*(3.17-1.71)
Q1-min(x)
max(x) - Q3
boxplot(Growth_Value$'Growth', Growth_Value$'Value',
xlab="Annual Returns, 2007-2016 (in percent)",
names =c("Growth","Value"), horizontal = TRUE)
boxplot(Growth_value$'Growth', Growth_value$'Value',
xlab="Annual Returns, 2007-2016 (in percent)",
names =c("Growth","Value"), horizontal = TRUE)
boxplot(x)
boxplot(x, horizontal = TRUE, xlab= "Annual Return Growth")
max(x)-min(x) ##range
sd(x)/mean(x) ##sample coefficient of variation
mad(x) ##sample mean absolute deviation of x
#Grouped Data
data("mtcars")
aggregate(mpg~gear, data=mtcars, mean)
aggregate(mpg~gear, data=mtcars, sd)
aggregate(mpg~gear, data=mtcars, var)
cor(Growth_value)
library(readxl)
Ann_Arbor <- read_excel("Desktop/BusStat/Ch03_Q45_Data_File_Using R.xlsx",
sheet = "Ann Arbor Rental Using R")
View(Ann_Arbor)
mean(Ann_Arbor$Rent)
mean(Ann_Arbor$Rent)
sd(Ann_Arbor$Rent)
mean(Ann_Arbor$SqFt)
sd(Ann_Arbor$SqFt)
library(readxl)
PE_Ratio <- read_excel("Desktop/BusStat/Chapter3.xlsx",
sheet = "PE_Ratio")
View(PE_Ratio)
summary(PE_Ratio)
IQR <- 19 - 12
7 - .5*IQR
12 - .5*IQR
19 + .5*IQR
boxplot(PE_Ratio, horizontal = TRUE)
library(readxl)
ERA <- read_excel("Desktop/BusStat/Chapter3.xlsx",
sheet = "ERA")
View(ERA)
summary(ERA)
mean(ERA$ERA...2, na.rm = TRUE)
mean(ERA$ERA...2, na.rm = TRUE)
sd(ERA$ERA...2, na.rm = TRUE)
mean(ERA$ERA...2, na.rm = TRUE)
sd(ERA$ERA...2, na.rm = TRUE)
mean(ERA$ERA...4, na.rm = TRUE)
sd(ERA$ERA...4, na.rm = TRUE)
median(ERA$ERA...2, na.rm = TRUE)
median(ERA$ERA...4, na.rm = TRUE)
mean(Ann_Arbor$Rent)
sd(Ann_Arbor$SqFt)
sd(Ann_Arbor$Rent)
mean(Ann_Arbor$SqFt)
bean <- c(17,	35,	87,	44,	40,	35,	50)
summary(bean)
boxplot(PE_Ratio$`P/E Ratio`)
boxplot(PE_Ratio$`P/E Ratio`, horizontal = TRUE)
hist(PE_Ratio$`P/E Ratio`)
pi
pi <- pi
#Question 1
t <-
test <- (3*pi)/4
#Question 1
t <- c(0,pi/4,pi/2, (3*pi)/4, pi)
Y1t <- sin(t)
Y2t <- sin(t+(pi/2))
EYt <- (.5*Y1t) + (.5*Y2t)
table_1.1 <- data.frame(t, Y1t, Y2t, EYt)
View(table_1.1)
realization <- function(t) {
sin(t + (pi/2))
}
?integrate
real_t <- integrate(realization,0,100)$value
mean_realization <- real_t/(0:100)
table_1.1
mean_realization
mean_realization <- real_t/100
mean_realization
cat("The calculated mean of the realization from t = 0 to t=100 is ",
mean_realization)
cat("The calculated mean of the realization from t = 0 to t=100 is",
mean_realization)
# Create a sequence to 100 and scale values to (0, 25)
t <- c(0:100)
t <- t * 25/100
# Define the time series
Yt1 <- sin(t)
# Plot our time series
plot(
t,
Yt1,
ylim = c(-1.1, 1.25),
type = "l",
col = "red",
lwd = 1,
lty = 1,
xlab = "Time",
ylab = NA
)
legend(
"top",
inset=0.01,
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
?lines
#Question 4
# Create a sequence to 100 and scale values to (0, 25)
t <- c(0:100)
t <- t * 25/100
# Define the time series
Yt1 <- sin(t)
Yt2 <- sin(t + (pi/2))
# Plot our time series
plot(
t,
Yt1,
ylim = c(-1.1, 1.25),
type = "l",
col = "red",
lwd = 1,
lty = 1,
xlab = "Time",
ylab = NA
)
#Add the missing lines
lines(
t,
Yt2,
ylim = c(-1.1, 1.25),
type = "p",
col = "blue",
lwd = 1,
lty = 2,
xlab = "Time",
ylab = NA
)
legend(
"top",
inset=0.01,
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
# Create a sequence to 100 and scale values to (0, 25)
t <- c(0:100)
t <- t * 25/100
# Define the time series
Yt1 <- sin(t)
Yt2 <- sin(t + (pi/2))
# Plot our time series
plot(
t,
Yt1,
ylim = c(-1.1, 1.25),
type = "l",
col = "red",
lwd = 1,
lty = 1,
xlab = "Time",
ylab = NA
)
#Add the missing lines
lines(
t,
Yt2,
ylim = c(-1.1, 1.25),
type = "l",
col = "blue",
lwd = 1,
lty = 2,
xlab = "Time",
ylab = NA
)
legend(
"top",
inset=0.01,
col=c("red","blue"),
lty=c(1,2),
lwd=c(1,1),
legend = c(
expression(sin(t)),
expression(sin(t+pi/2))),
bg="white",
box.col="white",
horiz=TRUE
)
getwd()
savehistory("/Users/tomberry/excercise_1.1_kberry.Rhistory")
