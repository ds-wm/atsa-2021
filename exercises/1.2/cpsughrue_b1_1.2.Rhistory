tswge
source('~/.active-rstudio-document')
# install.packages("tswge")
library('tswge')
tswge
ss08
tswge-package
force(artrans.wge)
data(ss08)
ss08
help('tswge')
data()
ss08
ss08
'ss08'
data(ss08)
plot(ss08)
pltts.wge(ss08)
plotts.wge(ss08)
class(ss08)
# Question 2
mean(ss08)
data(hadley)
acf(hadley)
acf(hadley, type = 'correlation')
acf(hadley, type = 'covariance')
acf(hadley, type = 'correlation')
Y0
plotts.wge(hadley)
length(hadley)
length
len
mean(hadley)
ts.data
hadley[0]
hadley[1]
hadley[1:5]
hadley[1:]
hadley[1:
]
prod
product
3*2
sum()
summation
sample.autocovariance <- function(ts.data, lag){
n <- length(ts.data)
mu <- mean(ts.data)
t.deviation <- ts.data[1:n - lag] - mu
h.deviation <- ts.data[lag + 1:n] - mu
product = t.deviation * h.deviation
summation = sum(product)
return((1 / n) * summation)
}
sample.autocovariance(hadley, 3)
hadley[1:n - lag]
hadley[1:length(hadley) - 3]
hadley[1:length(hadley)]
hadley[1:length(hadley) - 3]
a = length(hadley) - 3
hadley[1:a]
sample.autocovariance <- function(ts.data, lag){
n <- length(ts.data)
mu <- mean(ts.data)
t.dev.offset <- n - lag
h.dev.offset <- 1 + lag
t.deviation <- ts.data[1 : t.dev.offset] - mu
h.deviation <- ts.data[h.dev.offset : n] - mu
product = t.deviation * h.deviation
summation = sum(product)
return((1 / n) * summation)
}
sample.autocovariance(hadley, 3)
acf(hadley, lag.max = 1, plot = FALSE)
acf(hadley, lag.max = 3, type = 'covariance' plot = FALSE)
acf(hadley, lag.max = 3, type = 'covariance', plot = FALSE)
sample.autocorrelation <- function(ts.data, lag){
lag.h <- sample.autocovariance(ts.data, lag)
lag.0 <- sample.autocovariance(ts.data, 0)
return(lag.h / lag.0)
}
sample.autocorrelation(hadley, 3)
acf(hadley, lag.max = 3, plot = FALSE)
Y0 <- sample.autocovariance(hadley, 0)
# Y1 = sample autocovariance of time series X for a lag of 1
# $$\hat \gamma_1 = \frac{1}{n} \sum_{t = 1}^{n - 1} (X_t - \mu) (X_{t + 1} - \mu)$$
Y1 <- sample.autocovariance(hadley, 1) # = 0.66682
# p0 = sample autocovariance of time series X for a lag of 0
# $$\hat \rho_0 = \frac{\hat \gamma_0}{\hat \gamma_0}$$
p0 <- sample.autocorrelation(hadley, 0)
p0 <- sample.autocorrelation(hadley, 1) # = 1
data(fig1.10a)
fig1.10a
data('fig1.10a')
plotts.wge(fig1.10a)
period.wge(fig1.10a)
periodogram <- period.wge(fig1.10a)
periodogram
periodogram$freq
which.max()
help("which.max")
help('period.wge')
plot(fig1.10a)
plotts.wge(fig1.10a)
plot(periodogram$pgram)
plot(periodogram$freq)
plot(periodogram)
plot(periodogram)
plot(periodogram$pgram)
plotts.wge(periodogram$pgram)
plot(p1.10a$pgram, type = 'l')
plotts.wge(fig1.10a)
plotts.wge(p1.10a$pgram)
p1.10a <- period.wge(fig1.10a)
plotts.wge(p1.10a$pgram)
plotts.wge(fig1.10a)
length(p1.10a$pgram)
length(fig1.10a)
plotts.wge(p1.10a$pgram)
plotts.wge(p1.10a$pgram, xlim=c(1,30))
plot(p1.10a$pgram, type = 'l', xlim=c(1,30))
max1 <- which.max(pgram$pgram)
which.max(p1.10a$pgram)
p1.10a$freq[15]
max1 <- which.max(p1.10a$pgram)
freq1 <- p1.10a$freq[max1]*10
max2 <- which.max(p1.10a$pgram[0:14])
freq2 <- pgram$freq[max2]*10
max3 <- which.max(p1.10a$pgram[0:9])
freq3 <- pgram$freq[max3]*10
max1 <- which.max(p1.10a$pgram)
freq1 <- p1.10a$freq[max1]*10
max2 <- which.max(p1.10a$pgram[0:14])
freq2 <- p1.10a$freq[max2]*10
max3 <- which.max(p1.10a$pgram[0:9])
freq3 <- p1.10a$freq[max3]*10
plotts.wge(fig1.10a)
pi
plot(X, t, type = 'l')
t <- 0:100
X <- cos(2*pi*t*freq3) + 1.5*cos((2*pi*t*freq2) + 1) + 2*cos((2*pi*t*freq3) + 2.5)
plot(X, t, type = 'l')
plot(t, X, type = 'l')
t <- 0:1000/10
X <- cos(2*pi*t*freq3) + 1.5*cos((2*pi*t*freq2) + 1) + 2*cos((2*pi*t*freq3) + 2.5)
plot(t, X, type = 'l')
cat("The three freqencies are: ", freq1, freq2, freq3, "\n")
cat("The three freqencies are: ", freq1, ', ', freq2,', and ', freq3, "\n")
cat('The three freqencies are: ', freq1, ', ', freq2,', and', freq3, "\n")
cat('The three freqencies are:', freq1, ',', freq2,', and', freq3, "\n")
getwd()
setwd('C:/Users/cpsugh/OneDrive/Spring2021/DATA330')
savehistory("cpsughrue_b1_1.2.Rhistory")
