#install.packages("tswge")
library("tswge") # run previous line (above) if tswge "not found"
data("ss08")
plot(ss08, type = "l")
plotts.wge(ss08)
print(mean(ss08))
data("hadley")
acf(hadley, type="correlation")
acf(hadley, type="covariance")
cat("I guess I will proceed to use LaTeX to write the equations, as it is hard to write them out without using LaTeX on the keyboard. Please render them using some sort of LaTeX renderer that can render the hat character.")
y <- acf(hadley, lag.max = 1, plot = FALSE, type = "covariance")
print(y)
cat("^y0, ^y1, respectively")
p <- acf(hadley, lag.max = 1, plot = FALSE, type = "correlation")
print(p)
cat("^p0, ^p1, respectively")
cat("it makes sense that ^p0 is 1, as the equation (written as LaTeX) simplifies to 1 as it's just ^y0/^y0")
data("fig1.10a")
plot(1:1000/10, fig1.10a, type = "l")
p.f10a <- period.wge(fig1.10a, dbcalc = TRUE, plot = TRUE)
freqs <- p.f10a$freq
# from the notes, we can find that the pgram is stored here:
pgrams <- p.f10a$pgram
# which.max() returns us the index of the largest value
# allows us to use this index to grab the corresponding frequency!
dom1 <- freqs[which.max(pgrams)] # store it
pgrams[which.max(pgrams)] <- (-Inf) # now delete the largest value (negative infinity)
dom2 <- freqs[which.max(pgrams)] # we can now look for the next largest
pgrams[which.max(pgrams)] <- (-Inf)
dom3 <- freqs[which.max(pgrams)]
cat("The three dominant frequencies are as follows:", dom1, dom2, dom3)
# given... ?
x <- 0:1000/10
# put the vector into t (into the equation)
t <- x
Xt = cos(2*pi*t*dom1) + 1.5*cos(2*pi*t*dom2 + 1) + 2*cos(2*pi*t*dom3 + 2.5)
# now plot
plot(Xt, type = "l")
savehistory("C:/Users/Davbob/Desktop/ATSA_exercises/Exercise_1.2_DavidHuangWM.Rhistory")
