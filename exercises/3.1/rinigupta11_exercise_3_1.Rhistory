install.packages('forecast')
install.packages('ggplot2')
library(forecast)
library(ggplot2)
decomp <- stl(log(co2), s.window="periodic")
ap.sa <- exp(seasadj(decomp))
options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
lines(ap.sa, lwd = 2)
legend("top", legend=c("Original Data", "Deseasonalized Data"),
col=c("red", "black"), lty=1:1, cex = .7, horiz=TRUE, box.lty=0)
# Exercise 3.1.1
# Name: Rini Gupta
# Date: 4/28/2021
# Worked with Jacinta Das, Kimya Shirazi
# Will update this file with 3.1.2 and 3.1.3
install.packages('forecast')
install.packages('ggplot2')
library(forecast)
library(ggplot2)
de_c <- stl(log(co2), s.window="periodic")
ap_sa <- exp(seasadj(de_c))
options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
lines(ap_sa, lwd = 2)
legend("top", legend=c("Original Data", "Deseasonalized Data"),
col=c("red", "black"), lty=1:1, cex = .7, horiz=TRUE, box.lty=0)
## References
#R: Deseasonalizing a time series* [Online forum post]. (2016, October 27). Stack Overflow. https://stackoverflow.com/questions/40307454/r-deseasonalizing-a-time-series
savehistory("~/Desktop/rinigupta11_exercise3_1_1.Rhistory")
# Exercise 3.1.1
# Name: Rini Gupta
# Date: 4/28/2021
# Worked with Jacinta Das, Kimya Shirazi
# Will update this file with 3.1.2 and 3.1.3
install.packages('forecast')
install.packages('ggplot2')
install.packages("tswge")
library(tswge)
library(forecast)
library(ggplot2)
data(co2)
de_c <- stl(log(co2), s.window="periodic")
ap_sa <- exp(seasadj(de_c))
options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
lines(ap_sa, lwd = 2)
legend("top", legend=c("Original Data", "Deseasonalized Data"),
col=c("red", "black"), lty=1:1, cex = .7, horiz=TRUE, box.lty=0)
## References
#R: Deseasonalizing a time series* [Online forum post]. (2016, October 27). Stack Overflow. https://stackoverflow.com/questions/40307454/r-deseasonalizing-a-time-series
install.packages("forecast")
install.packages("ggplot2")
install.packages('forecast')
install.packages("forecast")
install.packages('ggplot2')
install.packages("tswge")
library(tswge)
library(forecast)
library(ggplot2)
data(co2)
de_c <- stl(log(co2), s.window="periodic")
ap_sa <- exp(seasadj(de_c))
options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
# Define the URL, scrub the file name from the URL and download to /tmp
ml.url <- "https://www.esrl.noaa.gov/gmd/webdata/ccgg/trends/co2/co2_mm_mlo.txt"
ml.name <- tail(unlist(strsplit(ml.url, "/")), n=1)
ml.file <- paste("/tmp/", ml.name, sep="")
download.file(ml.url, ml.file, method = 'auto')
# Read directly to dataframe preserving the header
ml.df <- read.table(ml.file, header = TRUE)
ml.df
# Read directly to dataframe preserving the header
ml.df <- read.table(ml.file)
ml.df
plot(ml.df$V4)
plot(ml.df$V4, type = 'l')
plot(ml.df$V4, type = 'l', col = 'red')
lines(ml.df$V5)
plot(ml.df$V3, ml.df$V4, type = 'l', col = 'red', main = 'Atmospheric CO2 at Mauna Loa Observatory', xlab = "Average CO2 Measurements (ppm)")
lines(ml.df$V5)
lines(ml.df$V3, ml.df$V5)
plot(ml.df$V3, ml.df$V4, type = 'l', col = 'red', main = 'Atmospheric CO2 at Mauna Loa Observatory', xlab = 'Year', ylab = "Average CO2 Measurements (ppm)")
lines(ml.df$V3, ml.df$V5)
install.packages('tswge')
library(tswge)
# Load data
data("dowjones2014")
aic.wge(dowjones2014, p = 0:12, q = 0:4, type = 'aicc')
install.packages('tswge')
library(tswge)
# Load data
data("dowjones2014")
aic.wge(dowjones2014, p = 0:12, q = 0:4, type = 'aicc')
# Yule-Walker
ex324.yw <- est.ar.wge(dowjones2014, p=1, factor = FALSE, type='yw')
# Burg (based on FBLS)
ex324.burg <- est.ar.wge(dowjones2014, p=1, factor = FALSE, type='burg')
# Maximum-Likelihood Estimators
ex324.mle <- est.ar.wge(dowjones2014, p=1, factor = FALSE, type='mle')
# Extract the parameter estimates for theta's and white noise variance
ex324.df <- data.frame(
type=c("True", "YW", "Burg", "MLE"),
phi1 = c(0.9816 , ex324.yw$phi[1], ex324.burg$phi[1], ex324.mle$phi[1]),
siga = c('something', ex324.yw$avar, ex324.burg$avar, ex324.mle$avar)
)
ex324.df
## Plotting the realization
plot(dowjones2014)
## Plotting the realization
plot(dowjones2014, type = 'l')
## Plotting the realization
plot(dowjones2014, type = 'l', main = 'Dow Jones 2014', ylab = 'Daily Average Stock Price')
dowjones2014
## Plotting the realization
plot(dowjones2014, type = 'l', main = 'Dow Jones 2014', ylab = 'Daily Average Dow Jones Price')
## Plotting the realization
dow_ts <- ts(dowjones2014, start = (2014, 1), end = (2014, 12))
## Plotting the realization
dow_ts <- ts(dowjones2014, start = c(2014, 1), end = c(2014, 12))
plot(dow_ts, type = 'l', main = 'Dow Jones 2014', ylab = 'Daily Average Dow Jones Price')
## Plotting the realization
dow_ts <- ts(dowjones2014, start = 1, end = 12)
plot(dow_ts, type = 'l', main = 'Dow Jones 2014', ylab = 'Daily Average Dow Jones Price')
plot(dow_ts, type = 'l', main = 'Dow Jones in 2014', ylab = 'Daily Average Dow Jones Price', xlab = 'Month')
plot(dowjones2014, type = 'l', main = 'Dow Jones in 2014', ylab = 'Daily Average Dow Jones Price', xlab = 'Month')
## Plotting the realization
plot(dowjones2014, type = 'l', main = 'Dow Jones in 2014', ylab = 'Daily Average Dow Jones Price', xlab = 'Time Realization')
data(co2)
de_c <- stl(co2, s.window="periodic")
ap_sa <- exp(seasadj(de_c))
options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
lines(ap_sa, lwd = 2)
legend("top", legend=c("Original Data", "Deseasonalized Data"),
col=c("red", "black"), lty=1:1, cex = .7, horiz=TRUE, box.lty=0)
data(co2)
de_c <- stl(co2, s.window="periodic")
ap_sa <- exp(seasadj(de_c))
options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
lines(ap_sa, lwd = 2)
legend("top", legend=c("Original Data", "Deseasonalized Data"),
col=c("red", "black"), lty=1:1, cex = .7, horiz=TRUE, box.lty=0)
install.packages('forecast')
install.packages('ggplot2')
install.packages("tswge")
library(tswge)
library(forecast)
library(ggplot2)
install.packages('forecast')
install.packages('ggplot2')
install.packages("tswge")
library(tswge)
library(forecast)
library(ggplot2)
data(co2)
de_c <- stl(co2, s.window="periodic")
ap_sa <- exp(seasadj(de_c))
options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
lines(ap_sa, lwd = 2)
legend("top", legend=c("Original Data", "Deseasonalized Data"),
col=c("red", "black"), lty=1:1, cex = .7, horiz=TRUE, box.lty=0)
de_c <- stl(log(co2), s.window="periodic")
ap_sa <- exp(seasadj(de_c))
options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
lines(ap_sa, lwd = 2)
legend("top", legend=c("Original Data", "Deseasonalized Data"),
col=c("red", "black"), lty=1:1, cex = .7, horiz=TRUE, box.lty=0)
## ****************** ##
## * Exercise 3.1.1 * ##
## ****************** ##

# ------------------------------------------------------------------------------
# Reproduction of Mauna Loa Plot
# ------------------------------------------------------------------------------
ml.url <- "https://www.esrl.noaa.gov/gmd/webdata/ccgg/trends/co2/co2_mm_mlo.txt"
ml.name <- tail(unlist(strsplit(ml.url, "/")), n=1)
ml.file <- paste("/tmp/", ml.name, sep="")
download.file(ml.url, ml.file, method = 'auto')
ml.df <- read.table(ml.file)
plot(ml.df$V3, ml.df$V4, type = 'l', col = 'red', main = 'Atmospheric CO2 at Mauna Loa Observatory', xlab = 'Year', ylab = "Average CO2 Measurements (ppm)")
lines(ml.df$V3, ml.df$V5)

# ------------------------------------------------------------------------------
# Recreation of Mauna Loa Plot
# ------------------------------------------------------------------------------
data(co2)
de_c <- stl(log(co2), s.window="periodic")
ap_sa <- exp(seasadj(de_c))

options(repr.plot.width=10, repr.plot.height=8, repr.plot.res = 125)
plot(co2, col = 'red', lwd = 2.5, xlab = 'Year', ylab = 'Average CO2 Measurements (ppm)', main = 'Atmospheric CO2 at Mauna Loa Observatory')
lines(ap_sa, lwd = 2)
legend("top", legend=c("Original Data", "Deseasonalized Data"),
       col=c("red", "black"), lty=1:1, cex = .7, horiz=TRUE, box.lty=0)


## ****************** ##
## * Exercise 3.1.3 * ##
## ****************** ##

ar.ts1 <- plotts.true.wge(100, phi=c(0.7), theta=c(0), lag.max = 10)
ar.ts1$aut1
savehistory("~/Desktop/rinigupta11_exercise_3_1.Rhistory")
